{
  "Angular -> Component": {
    "scope": "typescript",
    "prefix": "ngComponent",
    "description": "Angular Standalone Component",
    "body": [
        "import { ChangeDetectionStrategy, Component } from '@angular/core';",
        "",
        "/**",
        "* ${3:description}",
        "*",
        "* @author ${4:author}",
        "*/",
        "@Component({",
        "  selector: 'lib-${1:name}',",
        "  host: { class: '' },",
        "  standalone: true,",
        "  template: ``,",
        "  imports: [],",
        "  changeDetection: ChangeDetectionStrategy.OnPush,",
        "})",
        "export class ${2:name} {}",
      ]
  },
  "Angular -> Directive": {
    "scope": "typescript",
    "prefix": "ngDirective",
    "description": "Angular Standalone Directive",
    "body": [
        "import { Directive } from '@angular/core';",
        "",
        "/**",
        "* ${3:description}",
        "*",
        "* @author ${4:author}",
        "*/",
        "@Directive({",
        "  selector: '[lib${1:name}]',",
        "})",
        "export class ${2:name} {${5}}",
      ]
  },
  "Angular -> Pipe": {
    "scope": "typescript",
    "prefix": "ngPipe",
    "description": "Angular Standalone Pipe",
    "body": [
        "import type { PipeTransform } from '@angular/core';",
        "import { Pipe } from '@angular/core';",
        "",
        "/**",
        "* ${6:description}",
        "*",
        "* @author ${7:author}",
        "*/",
        "@Pipe({",
        "  name: '${1:selector}',",
        "  pure: ${8:true},",
        "})",
        "export class ${2:name} implements PipeTransform {",
        "  transform(value: ${3:valueType}, ...args: ${4:argsType}[]): ${5:returnType} {",
        "    return value;",
        "  }",
        "}",
      ]
  },
  "Angular -> Service": {
    "scope": "typescript",
    "prefix": "ngService",
    "description": "Angular Standalone Service",
    "body": [
        "import { Injectable } from '@angular/core';",
        "",
        "/**",
        "* ${2:description}",
        "*",
        "* @author ${3:author}",
        "*/",
        "@Injectable()",
        "export class ${1:name} {}",
      ]
  },
  "Angulat -> Test Service": {
    "scope": "typescript",
    "prefix": "ngTestService",
    "description": "Angular Standalone Test for Service",
    "body": [
        "import { TestBed } from '@angular/core/testing';",
        "import { ${1:Name} } from './${2:file}';",
        "",
        "describe('${1:Name}', () => {",
        "  let service: ${1:Name};",
        "",
        "  beforeEach(() => {",
        "    TestBed.configureTestingModule({",
        "      providers: [${1:Name}],",
        "    });",
        "",
        "    service = TestBed.inject(${1:Name});",
        "  });",
        "",
        "  it('should be created', () => {",
        "    expect(service).toBeTruthy();",
        "  });",
        "});",
      ]
  },
  "Angular -> Test Component": {
    "scope": "typescript",
    "prefix": "ngTestComponent",
    "description": "Angular Standalone Test Component",
    "body": [
        "import { ComponentFixture, TestBed } from '@angular/core/testing';",
        "import { ${1:Name} } from './${2:file}';",
        "",
        "describe('${1:Name}', () => {",
        "  let component: ${1:Name};",
        "  let fixture: ComponentFixture<${1:Name}>;",
        "",
        "  beforeEach(async () => {",
        "    await TestBed.configureTestingModule({",
        "      imports: [${1:Name}],",
        "    }).compileComponents();",
        "",
        "    fixture = TestBed.createComponent(${1:Name});",
        "    component = fixture.componentInstance;",
        "  });",
        "",
        "  it('should create', () => {",
        "    expect(component).toBeTruthy();",
        "  });",
        "});",
      ]
  },
}
