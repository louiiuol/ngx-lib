import{a as o}from"./chunk-NGOLEB3M.js";import"./chunk-EFT3UOO7.js";import"./chunk-YIFVF66K.js";import{a}from"./chunk-OAZG3KV2.js";import"./chunk-TVJZK64K.js";import"./chunk-NULE3QRY.js";import{Fa as t,Va as i,W as n,rb as l,sb as c}from"./chunk-3LZAVVBI.js";import"./chunk-TWZW5B45.js";var r=`<p class="ngde">Provides methods and property to keep track of current device information. (OS, screen size, etc.)</p><p class="ngde">When application init, this service process the following:</p><ul class="ngde"><li class="ngde">Watch for the current size {@link PlatformBreakpointName} and update {@currentSize} value whenever viewport size changes.</li></ul><h2 id="properties" href="api/classes/api/PlatformService" headinglink="true" class="ngde">Properties<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="properties"></ng-doc-heading-anchor></h2><div class="ng-doc-table-wrapper ngde"><table class="ng-doc-api-table sticky first-colum-highlighted ngde"><thead class="ngde"><tr indexable="false" class="ngde"><th class="ng-doc-api-table-name ngde">Name</th><th class="ng-doc-api-table-type ngde">Type</th><th class="ng-doc-api-table-description ngde">Description</th></tr></thead><tbody class="ngde"><tr class="ngde" data-slug="currentSize" data-slugtype="member" id="currentSize"><td indexable="false" class="ngde"><span class="ngde">currentSize</span><div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">PlatformBreakpointName</code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">name of the current size based on device screen width (default is unset)</p></td></tr><tr class="ngde" data-slug="isBiggerOrEqual" data-slugtype="member" id="isBiggerOrEqual"><td indexable="false" class="ngde"><span class="ngde">isBiggerOrEqual</span><div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">(size: PlatformBreakpointName) => boolean</code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Checks if current browser size (width) is bigger or equal to the size given.</p></td></tr><tr class="ngde" data-slug="isBiggerThan" data-slugtype="member" id="isBiggerThan"><td indexable="false" class="ngde"><span class="ngde">isBiggerThan</span><div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">(size: PlatformBreakpointName) => boolean</code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Checks if current browser size (width) is bigger than the size given.</p></td></tr><tr class="ngde" data-slug="isMobilePlatform" data-slugtype="member" id="isMobilePlatform"><td indexable="false" class="ngde"><span class="ngde">isMobilePlatform <span class="ng-doc-badge-wrapper ngde" ngdoctooltip="Readonly" indexable="false"><span class="ng-doc-badge ngde" indexable="false" data-content="readonly">r</span></span></span><div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">boolean</code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Checks if platform is a mobile (android or ios)</p></td></tr><tr class="ngde" data-slug="isMobileView" data-slugtype="member" id="isMobileView"><td indexable="false" class="ngde"><span class="ngde">isMobileView</span><div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">() => boolean</code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Checks if currentSize if smaller or equal to 'sm' size</p></td></tr><tr class="ngde" data-slug="isSmallerOrEqual" data-slugtype="member" id="isSmallerOrEqual"><td indexable="false" class="ngde"><span class="ngde">isSmallerOrEqual</span><div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">(size: PlatformBreakpointName) => boolean</code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Checks if current browser size (width) is smaller or equal to the size given.</p></td></tr><tr class="ngde" data-slug="isSmallerThan" data-slugtype="member" id="isSmallerThan"><td indexable="false" class="ngde"><span class="ngde">isSmallerThan</span><div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">(size: PlatformBreakpointName) => boolean</code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Checks if current browser size (width) is smaller than the size given.</p></td></tr><tr class="ngde" data-slug="responsive" data-slugtype="member" id="responsive"><td indexable="false" class="ngde"><span class="ngde">responsive</span><div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">(mobileSize: string, mediumSize: string, largeSize: string) => string</code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Checks viewport and returns desired size. For example, if device is a mobile, this method will return {mobileSize} Note: If called directly in component template: <code class="ngde">[class]="responsive(...)"</code>, value will update automatically !</p></td></tr></tbody></table></div><section indexable="false" class="ngde"><h2 id="example-usage" href="api/classes/api/PlatformService" headinglink="true" class="ngde">Example usage<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="example-usage"></ng-doc-heading-anchor></h2><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-typescript"><span class="line"></span></code></pre></section>`,d=class e extends a{pageType="api";pageContent=r;constructor(){super()}static \u0275fac=function(s){return new(s||e)};static \u0275cmp=n({type:e,selectors:[["ng-doc-page-rfu8hovk"]],standalone:!0,features:[l([{provide:a,useExisting:e}]),t,c],decls:1,vars:0,template:function(s,m){s&1&&i(0,"ng-doc-page")},dependencies:[o],encapsulation:2,changeDetection:0})},p=[{path:"",component:d,title:"PlatformService"}],v=p;export{d as PageComponent,v as default};
